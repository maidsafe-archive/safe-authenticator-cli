env:
  global:
    - RUST_BACKTRACE=1
    # - RUSTFLAGS="-C opt-level=2 -C codegen-units=8"
    - PATH=$PATH:$HOME/.cargo/bin
language: rust
rust:
  - 1.32.0

# necessary for `travis-cargo coveralls --no-sudo`
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

matrix:
  include:
    - os: linux
    - os: osx
    - os: windows
      env:
        - YARN_GPG=no # otherwise this starts gpg-agent that never exits

sudo: false
cache:
  # Double the default timeout.
  timeout: 360
  cargo: true
  directories:
    - "${HOME}/.cache/master"

before_script:
  - curl -sSL https://github.com/maidsafe/QA/raw/master/travis/cargo_install.sh > cargo_install.sh
  - bash cargo_install.sh cargo-prune;
  - PKGNAME="safe_auth" # must match with cargo.toml

before_cache:
  - cargo prune

install:
  - cargo check

script:
  - cargo test

after_success:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build &&
      cmake .. && make &&
      make install DESTDIR=../../kcov-build && cd ../.. &&
      rm -rf kcov-master && rm master.tar.gz &&
      for file in target/debug/$PKGNAME-*; do \
        [ -x "${file}" ] || continue; \
        echo "Calculating coverage of ${file}..."
        mkdir -p "target/cov/$(basename $file)"; \
        ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; \
        ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file" --coveralls-id=$TRAVIS_JOB_ID; \
      done &&
      bash <(curl -s https://codecov.io/bash) -t 6bfd35b4-f75a-4e20-b656-f2a07838976f &&
      echo "Uploaded code coverage to codecov.io";
      fi
